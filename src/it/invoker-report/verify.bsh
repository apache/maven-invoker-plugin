/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import java.util.*;

File reportFile = new File( basedir, "target/site/invoker-report.html");

passed = true;

System.out.println( "Checking for existence of report file: " + reportFile );
if ( !reportFile.exists() )
{
    System.out.println( "FAILED!" );
    passed = false;
}

buildLogReader = null;
try
{
    buildLogReader = new BufferedReader( new FileReader( new File( basedir, "build.log" ) ) );
    allWarningLines = new ArrayList();

    currentLine = null;
    while ( ( currentLine = buildLogReader.readLine() ) != null )
    {
        if ( currentLine.contains( "[WARNING] Incomplete job name-description" ) )
        {
            allWarningLines.add( currentLine );
        }
    }

    missingNameLinesCount = 0;
    missingDescriptionLinesCount = 0;

    for ( currentLine : allWarningLines )
    {
        if ( currentLine.contains( "name is missing" ) )
        {
            ++missingNameLinesCount;
        }

        if ( currentLine.contains( "description is missing" ) )
        {
            ++missingDescriptionLinesCount;
        }
    }

    expectedMissingNames = 4;
    if ( expectedMissingNames != missingNameLinesCount )
    {
        System.out.println( "Current missingNameLinesCount: " + missingNameLinesCount + " but expecting: " + expectedMissingNames );
        passed = false;
    }

    expectedMissingDescriptions = 1;
    if ( expectedMissingDescriptions != missingDescriptionLinesCount )
    {
        System.out.println( "Current missingDescriptionLinesCount: " + missingDescriptionLinesCount + " but expecting: " + expectedMissingDescriptions );
        passed = false;
    }
}
finally
{
    if ( buildLogReader != null )
    {
        buildLogReader.close();
    }
}

return passed;
